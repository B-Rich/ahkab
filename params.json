{"name":"Ahkab","tagline":"a SPICE-like electronic circuit simulator written in Python","body":"<img src=\"https://github.com/ahkab/ahkab/wiki/images/logo.png\" alt=\"logo\" style=\"width: 100px;\"/>\r\n\r\na SPICE-like electronic circuit simulator written in Python\r\n\r\nThe code should be easy to read and modify, the main language is Python 2.x and it is platform-independent.\r\n\r\n### News! ###\r\n\r\n * The project [moved to GitHub](https://github.com/ahkab/ahkab). \r\n * `ahkab` can now be run stand-alone with a netlist file or _within Python scripts as a library_. This will likely become the preferred way in the future. See **[this butterworth filter simulation](https://github.com/ahkab/ahkab/wiki/Example:-Python-API)** for an example/tentative tutorial.\r\n\r\n### Supported simulations: ###\r\n  * Numeric:\r\n    * **Operating point**, with guess computation to speed up the solution. See example: [Downscaling current mirror](https://github.com/ahkab/ahkab/wiki/Example:-OP-simulation)\r\n    * **DC sweep**\r\n    * **Transient analysis**, available differentiation formulas: implicit Euler, trapezoidal, gear orders from 2 to 5. See for example the [simulation of a Colpitts Oscillator](https://github.com/ahkab/ahkab/wiki/Example:-Transient-simulation-1).\r\n    * **AC analysis**\r\n    * **Periodic steady state analysis** of non-autonomous circuits, _time_ _domain_ shooting and brute-force algorithms.\r\n  * Symbolic: \r\n    * **Small signal analysis**, AC or DC, with extraction of transfer functions, DC gain, poles and zeros. Various [symbolic analysis examples on this page](https://github.com/ahkab/ahkab/wiki/Example:-Symbolic-simulation).\r\n\r\nThe results are saved to disk, plotted or printed to stdout and can be read/processed by the most common tools (eg. [Octave](http://www.gnu.org/software/octave/), [gnuplot](http://www.gnuplot.info/), [Matlab](http://www.mathworks.com/products/matlab/), [gwave](http://www.telltronics.org/software/gwave/) and others)\r\n\r\n###Download and install###\r\n\r\nThere are no packages for the time being (this program is at an early development stage). Go to [ahkab on github](https://github.com/ahkab/ahkab) and follow the instructions to check out the code. You can find the list of the dependencies in the [Install notes](https://github.com/ahkab/ahkab/wiki/Install:-Notes).\r\n\r\n###Run standalone###\r\n\r\n    $ python ahkab -o graph.dat <netlist file>`\r\n\r\nSee `ahkab --help` for command line switches.\r\n\r\n###Documentation###\r\n\r\nThe simulator can either be run from the command line with a netlist file or included in a python script. Both possibilities will be maintained for the foreseeable future. \r\n\r\nRefer to the [netlist syntax page](https://github.com/ahkab/ahkab/wiki/Help:-Netlist-Syntax) for how to write the netlist files that describe the circuit. Experience with running SPICE or other commercial simulators can be useful.\r\n\r\nThe latter option is shown briefly in the **[Python API](https://github.com/ahkab/ahkab/wiki/Example:-Python-API)** wiki page. The code comes with docstrings associated with _most_ functions, type `help(ahkab.function_name)`.\r\n\r\n### Contributors ###\r\nGiuseppe Venturini (@ggventurini on GH) Ian Daniher (@itdaniher, also on GH)\r\n\r\n### Bugs and patches ###\r\n\r\nNote that _I often add new functionality at the expense of breaking stuff_. Most likely I will introduce a new feature even if that means breaking a couple of others. It should get fixed soon, but if you have a bit of time to spare, you can send me a pull request or a patch. :)\r\n\r\nDoes it work? Bugs? Do you have patches? Did you run some noteworthy simulation? Let me know! Feedback is very welcome, my [email address](http://tinymailto.com/5310) is available after a captcha.","google":"UA-43456631-1","note":"Don't delete this file! It's used internally to help with page regeneration."}